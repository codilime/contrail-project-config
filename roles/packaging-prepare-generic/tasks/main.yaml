- name: Populate ansible variables with packaging info
  prepare_packaging_vars:
    zuul_project: "{{ zuul.project }}"
    zuul_project_is_packaging: "{{ contrail_project_is_packaging }}"
    distribution: "{{ ansible_distribution|lower() }}"
    release: "{{ ansible_distribution_release }}"
  register: package

- name: Install ubuntu-cloud-keyring package
  shell: |
    docker exec --user root:root builder sh -c '
      apt-get update
      apt-get install --assume-yes ubuntu-cloud-keyring'

- name: Add additional repositories
  shell: |
    docker exec --user root:root builder sh -c '
      echo "{{ item.entry }}" >> "/etc/apt/sources.list.d/{{ item.name }}.list"'
  register: repos
  with_items: "{{ extra_repositories }}"

- name: Update a list of available packages
  shell: |
    docker exec --user root:root builder sh -c '
      apt-get update'
  when: "repos|changed"

- name: Install build-related packages in the container
  shell: |
    docker exec --user root:root builder sh -c '
      apt-get install --no-install-recommends --assume-yes \
        devscripts equivs libwww-perl build-essential'

- name: Create project directory in the workplace
  file:
    path: "{{ ansible_env.HOME }}/{{ package.package.target_dir }}"
    state: "directory"
  when: package.upstream is not defined

- name: Copy packaging from the packaging repo
  synchronize:
    src: "{{ ansible_env.HOME}}/{{ package.package.debian_dir }}/"
    dest: "{{ ansible_env.HOME}}/{{ package.package.target_dir }}/debian/"
    copy_links: yes
    rsync_opts:
      - --quiet
      - --exclude='.git/'
  delegate_to: "{{ ansible_default_ipv4.address }}"

